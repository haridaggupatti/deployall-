{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\front end\\\\AI-UI\\\\src\\\\components\\\\InterviewPage.jsx\",\n  _s = $RefreshSig$();\nimport \"./InterviewPage.css\";\nimport { useState, useRef, useEffect } from 'react';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function InterviewPage() {\n  _s();\n  const [responseData, setResponseData] = useState('');\n  const [start, setStart] = useState(\"\");\n  const [speech, setSpeech] = useState(\"\");\n  const speechRef = useRef(speech);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (localStorage.getItem(\"access_token\")) {\n      navigate(\"/\");\n    } else {\n      navigate(\"/login\");\n    }\n  });\n  const handleInputChange = event => {\n    setSpeech(event.target.value);\n    speechRef.current = event.target.value;\n  };\n  const handleFetchData = async event => {\n    event.preventDefault();\n    setStart(\"Fetching Answer\");\n    const resume = localStorage.getItem(\"resume\");\n    const prompt = localStorage.getItem(\"prompt\");\n    console.log(prompt);\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/api/get_answer\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          \"prompt_text\": speechRef.current,\n          \"resume_context\": resume || \"\",\n          \"resume_prompt\": prompt\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const resp = await response.json();\n      setResponseData(resp);\n      console.log(resp);\n    } catch (error) {\n      console.error('Failed to fetch data:', error);\n    }\n  };\n  const handleStart = async event => {\n    event.preventDefault();\n    setTimeout(() => {\n      setStart(\"Start Speaking\");\n    }, 1200);\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/api/start-recognition\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const resp = await response.json();\n      setSpeech(resp);\n      speechRef.current = resp; // Update the ref when speech is set\n    } catch (error) {\n      console.error('Error starting recognition:', error);\n    }\n  };\n  const handleStop = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/api/stop-recognition\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      await response.json();\n      setStart(\"Listening Stopped\");\n    } catch (error) {\n      console.error('Error stopping recognition:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      id: \"upload_resume\",\n      to: \"/update-resume\",\n      children: \"Upload Resume\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"started\",\n      children: start\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"interview-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paragra\",\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          id: \"input1\",\n          style: {\n            whiteSpace: \"pre-wrap\"\n          },\n          children: responseData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inp-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          style: {\n            whiteSpace: \"pre-wrap\",\n            textAlign: \"left\",\n            resize: \"vertical\"\n          },\n          id: \"input2\",\n          className: \"input_box\",\n          onChange: handleInputChange,\n          value: speech\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStart,\n          children: \"Start Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStop,\n          children: \"Stop Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFetchData,\n          children: \"Get Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(InterviewPage, \"VseJDvynwyxdlF3J+EalEVHhpf8=\", false, function () {\n  return [useNavigate];\n});\n_c = InterviewPage;\nvar _c;\n$RefreshReg$(_c, \"InterviewPage\");","map":{"version":3,"names":["useState","useRef","useEffect","Link","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","InterviewPage","_s","responseData","setResponseData","start","setStart","speech","setSpeech","speechRef","navigate","localStorage","getItem","handleInputChange","event","target","value","current","handleFetchData","preventDefault","resume","prompt","console","log","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","resp","json","error","handleStart","setTimeout","handleStop","children","id","to","fileName","_jsxFileName","lineNumber","columnNumber","className","style","whiteSpace","textAlign","resize","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/front end/AI-UI/src/components/InterviewPage.jsx"],"sourcesContent":["import \"./InterviewPage.css\";\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nexport default function InterviewPage() {\r\n    const [responseData, setResponseData] = useState('');\r\n    const [start, setStart] = useState(\"\");\r\n    const [speech, setSpeech] = useState(\"\");\r\n    const speechRef = useRef(speech);\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(()=>{\r\n        if (localStorage.getItem(\"access_token\")){\r\n            navigate(\"/\")\r\n        }\r\n        else{\r\n            navigate(\"/login\")\r\n        }\r\n    })\r\n\r\n    const handleInputChange = (event) => {\r\n        setSpeech(event.target.value);\r\n        speechRef.current = event.target.value;\r\n    };\r\n\r\n    const handleFetchData = async (event) => {\r\n        event.preventDefault();\r\n        setStart(\"Fetching Answer\");\r\n        const resume = localStorage.getItem(\"resume\"); \r\n        const prompt = localStorage.getItem(\"prompt\"); \r\n        console.log(prompt) \r\n        try {\r\n            const response = await fetch(\"http://127.0.0.1:8000/api/get_answer\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    \"prompt_text\": speechRef.current,\r\n                    \"resume_context\": resume || \"\" ,\r\n                    \"resume_prompt\" : prompt\r\n                })\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n\r\n            const resp = await response.json();\r\n            setResponseData(resp);\r\n            console.log(resp);\r\n        } catch (error) {\r\n            console.error('Failed to fetch data:', error);\r\n        }\r\n    };\r\n\r\n    const handleStart = async (event) => {\r\n        event.preventDefault();\r\n        setTimeout(() => {\r\n            setStart(\"Start Speaking\");\r\n        }, 1200);\r\n        try {\r\n            const response = await fetch(\"http://127.0.0.1:8000/api/start-recognition\", {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n\r\n            const resp = await response.json();\r\n            setSpeech(resp);\r\n            speechRef.current = resp; // Update the ref when speech is set\r\n        } catch (error) {\r\n            console.error('Error starting recognition:', error);\r\n        }\r\n    };\r\n\r\n    const handleStop = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const response = await fetch(\"http://127.0.0.1:8000/api/stop-recognition\", {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n\r\n            await response.json();\r\n            setStart(\"Listening Stopped\");\r\n        } catch (error) {\r\n            console.error('Error stopping recognition:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Link id=\"upload_resume\" to=\"/update-resume\">Upload Resume</Link>\r\n            <button id=\"started\">{start}</button>\r\n            <div className=\"interview-box\">\r\n                <div className=\"paragra\">\r\n                    <pre id=\"input1\" style={{ whiteSpace: \"pre-wrap\" }}>{responseData}</pre>\r\n                </div>\r\n                <div className=\"inp-box\">\r\n                    <textarea style={{ whiteSpace: \"pre-wrap\", textAlign: \"left\", resize: \"vertical\" }} id=\"input2\" className=\"input_box\" onChange={handleInputChange} value={speech} />\r\n                    <button onClick={handleStart}>Start Recording</button>\r\n                    <button onClick={handleStop}>Stop Recording</button>\r\n                    <button onClick={handleFetchData}>Get Answer</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}